         733282622 function calls (728737591 primitive calls) in 5088.370 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
 62764700 1061.720    0.000 1061.720    0.000 {scipy.integrate._quadpack._qagse}
 62764700  823.020    0.000 2644.078    0.000 quadpack.py:44(quad)
 62764700  347.383    0.000 1409.102    0.000 quadpack.py:430(_quad)
 62764700  342.947    0.000 2987.024    0.000 core.py:1166(<lambda>)
 98367497  247.274    0.000  429.327    0.000 {isinstance}
   108215  184.237    0.002 3191.919    0.029 function_base.py:2035(_vectorize_call)
 63413991  146.096    0.000  146.096    0.000 {max}
 62764700  143.843    0.000  143.843    0.000 {min}
28028219/27487144  105.136    0.000  177.677    0.000 {getattr}
  9739353   97.135    0.000  163.081    0.000 abc.py:128(__instancecheck__)
  1515011   94.683    0.000  733.983    0.000 core.py:2054(_expand_and_gather)
  6925760   89.282    0.000  134.521    0.000 core.py:730(__hash__)
5735395/4977890   56.130    0.000  121.391    0.000 core.py:1943(__hash__)
18612980/17097970   54.554    0.000   75.174    0.000 {hash}
  3462880   47.327    0.000  313.792    0.000 core.py:2055(add_unit)
 15366536   45.753    0.000   45.753    0.000 _weakrefset.py:70(__contains__)
  1515018   44.711    0.000  173.452    0.000 quantity.py:710(_new_view)
  1082156   37.694    0.000  638.616    0.001 quantity.py:598(__array_ufunc__)
 15041885   35.623    0.000   35.623    0.000 core.py:1558(name)
  1082156   34.743    0.000  149.882    0.000 {function __array_ufunc__ at 0x7f0da7df50c8}
4339128/4014483   34.676    0.000   49.179    0.000 {numpy.core.multiarray.array}
   865720   34.591    0.000  309.178    0.000 quantity.py:278(__new__)
  4003971   28.891    0.000   52.042    0.000 quantity.py:398(__array_finalize__)
2813595/1839660   28.473    0.000  413.110    0.000 core.py:2114(decompose)
  5302551   26.929    0.000   61.094    0.000 {method 'view' of 'numpy.ndarray' objects}
  3787526   24.841    0.000   96.557    0.000 utils.py:194(validate_power)
  1515011   24.484    0.000  802.429    0.001 core.py:1992(__init__)
  1082156   21.274    0.000  278.874    0.000 quantity_helper.py:428(converters_and_unit)
1082152/973937   20.359    0.000  523.947    0.001 core.py:656(__div__)
  2813598   20.131    0.000   45.524    0.000 core.py:1754(__call__)
  2705375   20.110    0.000  150.812    0.000 utils.py:248(resolve_fractions)
  2272523   19.451    0.000   30.410    0.000 quantity.py:846(to_value)
6727386/6727385   16.741    0.000   22.286    0.000 {len}
   108215   16.474    0.000  815.993    0.008 core.py:150(__init__)
  1947870   16.007    0.000   52.989    0.000 generic.py:4362(__getattr__)
   649292   15.364    0.000  525.526    0.001 quantity.py:1050(__truediv__)
   108215   14.521    0.000 4670.621    0.043 <ipython-input-55-47387a746c80>:1(DM)
  6925760   14.411    0.000   14.411    0.000 core.py:584(scale)
  1515011   14.135    0.000   44.411    0.000 {method 'sort' of 'list' objects}
  1082153   13.752    0.000   75.777    0.000 core.py:2133(is_unity)
  2272517   13.711    0.000   41.357    0.000 utils.py:176(sanitize_scale)
  2488953   13.248    0.000   19.575    0.000 quantity.py:767(_set_unit)
   150100   12.401    0.000 5081.066    0.034 minimizer.py:1951(_lnpost)
  3030037   12.388    0.000   56.795    0.000 quantity.py:635(<genexpr>)
  2380730   12.114    0.000   30.276    0.000 core.py:2102(<lambda>)
   216430   12.061    0.000   85.670    0.000 series.py:166(__init__)
  4977890   11.844    0.000   11.844    0.000 core.py:2025(__hash__)
  3463327   11.803    0.000   14.631    0.000 {hasattr}
  1298587   11.738    0.000   21.821    0.000 {any}
   432863   11.673    0.000  312.765    0.001 core.py:915(_to)
  1082150   10.424    0.000   55.904    0.000 misc.py:41(isiterable)
   973934   10.172    0.000   17.222    0.000 common.py:1835(_get_dtype_type)
  4545037   10.148    0.000   10.148    0.000 core.py:2040(bases)
   541075    9.897    0.000   21.024    0.000 type_check.py:185(iscomplex)
   108215    9.031    0.000 4971.835    0.046 <ipython-input-57-82bfe93f3dd6>:4(residual)
   505656    8.615    0.000    8.615    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   973943    8.484    0.000  112.898    0.000 quantity.py:652(_result_as_quantity)
  3679316    8.308    0.000    8.308    0.000 core.py:2033(scale)
  1082141    7.909    0.000   15.659    0.000 quantity.py:963(__getattr__)
  1515011    7.879    0.000   11.603    0.000 six.py:598(iteritems)
  1082141    7.750    0.000    7.750    0.000 {method 'format' of 'unicode' objects}
  1406790    7.311    0.000   22.015    0.000 generic.py:7(_check)
  2380732    6.955    0.000    6.955    0.000 utils.py:166(is_effectively_unity)
  3030037    6.893    0.000    6.893    0.000 quantity_helper.py:477(<genexpr>)
   541075    6.666    0.000   14.641    0.000 internals.py:4752(get_values)
   324646    6.460    0.000  107.450    0.000 quantity.py:1023(__mul__)
  2272522    6.358    0.000    7.512    0.000 quantity.py:889(unit)
1190365/1082150    6.263    0.000   13.741    0.000 core.py:1937(decompose)
   216430    6.107    0.000   14.880    0.000 series.py:4019(_sanitize_array)
  2813593    6.106    0.000    6.106    0.000 core.py:2047(powers)
   216429    5.924    0.000   16.108    0.000 common.py:1688(is_extension_array_dtype)
   216430    5.786    0.000   36.541    0.000 core.py:712(__rmul__)
   432862    5.757    0.000  171.020    0.000 quantity_helper.py:242(helper_division)
   649290    5.656    0.000   20.631    0.000 base.py:1590(is_object)
   108215    5.549    0.000   23.536    0.000 function_base.py:1974(_get_ufunc_and_otypes)
   108215    5.380    0.000  159.499    0.001 quantity.py:1354(_decompose)
   649290    5.352    0.000   11.878    0.000 common.py:89(is_object_dtype)
  1947879    5.327    0.000    5.327    0.000 {issubclass}
   649290    5.190    0.000   31.204    0.000 base.py:2101(_can_hold_identifiers_and_holds_name)
216430/108215    4.847    0.000  155.406    0.001 constant.py:38(wrapper)
   108215    4.837    0.000 3340.316    0.031 core.py:1259(luminosity_distance)
   541075    4.691    0.000    7.554    0.000 internals.py:4745(internal_values)
   216430    4.625    0.000    8.554    0.000 core.py:894(<lambda>)
1298581/1190366    4.583    0.000   45.793    0.000 {iter}
   397442    4.564    0.000   11.966    0.000 fromnumeric.py:64(_wrapreduction)
   216430    4.386    0.000    9.091    0.000 internals.py:116(__init__)
   216430    4.373    0.000   30.385    0.000 internals.py:4639(__init__)
   324646    4.328    0.000   20.857    0.000 quantity_helper.py:233(helper_multiplication)
   541072    4.066    0.000    6.450    0.000 base.py:61(is_dtype)
   649290    3.943    0.000    5.383    0.000 base.py:1593(is_categorical)
   216430    3.909    0.000    7.469    0.000 generic.py:4378(__setattr__)
   324646    3.894    0.000   15.050    0.000 core.py:694(__mul__)
   649290    3.837    0.000    5.545    0.000 range.py:481(__len__)
  1515018    3.825    0.000    3.825    0.000 quantity.py:692(__quantity_subclass__)
   108214    3.782    0.000   49.505    0.000 missing.py:189(_isna_ndarraylike)
   216430    3.742    0.000   97.982    0.000 series.py:643(__array_wrap__)
  1515011    3.724    0.000    3.724    0.000 {method 'iteritems' of 'dict' objects}
   108215    3.625    0.000    3.625    0.000 {method 'tolist' of 'numpy.ndarray' objects}
   108217    3.543    0.000   14.829    0.000 _abcoll.py:548(update)
  1406801    3.475    0.000    3.475    0.000 {method 'item' of 'numpy.ndarray' objects}
   216430    3.434    0.000  323.172    0.001 quantity.py:811(_to_value)
  1515016    3.401    0.000    3.401    0.000 quantity_helper.py:11(_d)
   547084    3.361    0.000    7.174    0.000 numeric.py:504(asanyarray)
   108216    3.345    0.000   19.891    0.000 collections.py:50(__init__)
   649290    3.260    0.000    5.778    0.000 generic.py:438(_info_axis)
   108215    3.217    0.000 3247.497    0.030 core.py:1146(_comoving_distance_z1z2)
   541075    3.136    0.000   10.690    0.000 series.py:465(_values)
  1082150    3.120    0.000    3.120    0.000 internals.py:4684(_block)
   542576    3.116    0.000   13.713    0.000 numeric.py:433(asarray)
   108215    3.113    0.000 3203.970    0.030 core.py:2824(vectorize_if_needed)
   649290    3.096    0.000    3.096    0.000 range.py:236(dtype)
   541075    3.058    0.000   17.699    0.000 series.py:476(get_values)
   541075    3.055    0.000   20.754    0.000 series.py:637(__array__)
   541075    3.025    0.000    5.056    0.000 internals.py:222(to_dense)
   216430    2.998    0.000  348.085    0.002 quantity.py:818(to)
   108214    2.962    0.000    7.932    0.000 {pandas._libs.lib.is_scalar}
   108215    2.881    0.000   18.674    0.000 typeof.py:24(typeof)
   108215    2.820    0.000   40.187    0.000 base.py:893(tolist)
   216430    2.775    0.000    8.072    0.000 generic.py:4345(__finalize__)
   432863    2.768    0.000    4.316    0.000 {all}
  1190374    2.736    0.000    2.736    0.000 {method 'get' of 'dict' objects}
   216430    2.623    0.000    3.929    0.000 core.py:2301(_condition_arg)
   108214    2.592    0.000   75.540    0.001 minimizer.py:2087(_nan_policy)
   432862    2.589    0.000  340.452    0.001 quantity.py:1078(__div__)
   216430    2.563    0.000   21.611    0.000 internals.py:3191(make_block)
   216430    2.493    0.000    3.975    0.000 series.py:365(_set_axis)
   216430    2.432    0.000  318.441    0.001 core.py:948(to)
   541079    2.376    0.000    2.376    0.000 {numpy.core.multiarray.zeros}
   649290    2.367    0.000    2.367    0.000 {numpy.core.multiarray.can_cast}
   432860    2.301    0.000    3.334    0.000 series.py:401(name)
   108215    2.292    0.000  821.190    0.008 core.py:1553(__init__)
   108215    2.286    0.000  826.479    0.008 core.py:1738(__init__)
   432860    2.266    0.000    3.819    0.000 series.py:405(name)
   216430    2.252    0.000  307.455    0.001 core.py:885(_get_converter)
   216430    2.244    0.000    9.957    0.000 internals.py:3148(get_block_type)
   216438    2.226    0.000    3.041    0.000 parameter.py:740(_getval)
   108215    2.176    0.000    2.176    0.000 typeof.py:59(_typeof_buffer)
   108215    2.144    0.000 3194.062    0.030 function_base.py:1944(__call__)
   324646    2.112    0.000    2.112    0.000 {method 'astype' of 'numpy.ndarray' objects}
   216430    2.068    0.000    6.610    0.000 series.py:650(__array_prepare__)
   108215    1.964    0.000   20.556    0.000 common.py:647(is_datetimelike)
   324644    1.954    0.000    5.804    0.000 common.py:369(is_datetime64tz_dtype)
   108215    1.926    0.000    3.480    0.000 function_base.py:1912(__init__)
   289223    1.905    0.000    9.008    0.000 fromnumeric.py:1933(any)
   216430    1.866    0.000    2.429    0.000 internals.py:237(mgr_locs)
   324645    1.856    0.000    9.344    0.000 core.py:1940(is_unity)
   108217    1.845    0.000    3.865    0.000 quantity_helper.py:321(get_converters_and_unit)
   216428    1.804    0.000    2.356    0.000 parameter.py:785(value)
   108214    1.777    0.000   66.151    0.001 missing.py:112(_isna_new)
   150100    1.758    0.000 5082.824    0.034 ensemble.py:517(__call__)
   216432    1.737    0.000    6.941    0.000 {method 'copy' of 'numpy.ndarray' objects}
   216430    1.733    0.000    7.558    0.000 inference.py:251(is_list_like)
   108215    1.722    0.000    4.571    0.000 parameter.py:190(update_constraints)
   649300    1.700    0.000    1.700    0.000 collections.py:90(__iter__)
   324645    1.667    0.000    5.905    0.000 parameter.py:371(<genexpr>)
   108215    1.643    0.000   23.558    0.000 parameter.py:361(valuesdict)
   108215    1.601    0.000   11.844    0.000 typeof.py:38(typeof_impl)
   108217    1.527    0.000    2.459    0.000 collections.py:125(items)
   324645    1.521    0.000    2.188    0.000 core.py:1656(decompose)
   216433    1.515    0.000   10.607    0.000 quantity_helper.py:18(get_converter)
   108215    1.509    0.000   20.183    0.000 dispatcher.py:484(typeof_pyval)
   216430    1.484    0.000    1.484    0.000 cast.py:853(maybe_castable)
   649290    1.441    0.000    1.441    0.000 numeric.py:169(inferred_type)
   108214    1.378    0.000    3.032    0.000 dtypes.py:707(is_dtype)
   216430    1.347    0.000    1.347    0.000 generic.py:124(__init__)
   541075    1.343    0.000    1.343    0.000 internals.py:203(internal_values)
   216430    1.313    0.000    2.797    0.000 series.py:4036(_try_cast)
   541076    1.304    0.000    1.304    0.000 core.py:941(<genexpr>)
     1501    1.271    0.001 5087.939    3.390 ensemble.py:130(sample)
   216432    1.270    0.000    1.270    0.000 collections.py:71(__setitem__)
   108215    1.256    0.000    2.024    0.000 collections.py:121(values)
   216431    1.254    0.000   68.394    0.000 quantity.py:1043(__rmul__)
   108214    1.229    0.000   11.785    0.000 common.py:1405(needs_i8_conversion)
   216438    1.198    0.000    4.238    0.000 parameter.py:780(value)
   505663    1.192    0.000    1.192    0.000 {method 'items' of 'dict' objects}
   216430    1.192    0.000    1.800    0.000 base.py:4914(_ensure_index)
   108215    1.149    0.000   14.509    0.000 singledispatch.py:209(wrapper)
   216430    1.141    0.000    7.196    0.000 common.py:122(is_sparse)
   216430    1.101    0.000    1.553    0.000 inference.py:415(is_hashable)
   108215    1.100    0.000 3248.597    0.030 core.py:1196(_comoving_transverse_distance_z1z2)
   108215    1.043    0.000    1.516    0.000 singledispatch.py:173(dispatch)
   108215    1.023    0.000   41.459    0.000 base.py:912(__iter__)
   108215    1.006    0.000    5.599    0.000 common.py:332(is_datetime64_dtype)
   108214    1.004    0.000    5.549    0.000 common.py:1170(is_datetime_or_timedelta_dtype)
   108218    1.001    0.000    5.864    0.000 fromnumeric.py:2016(all)
     3001    0.998    0.000 5083.822    1.694 {map}
   216430    0.970    0.000    0.970    0.000 series.py:391(_set_subtyp)
   108214    0.962    0.000    2.512    0.000 dtypes.py:584(is_dtype)
   324645    0.947    0.000    0.947    0.000 function_base.py:1997(<genexpr>)
   108217    0.920    0.000    1.487    0.000 abc.py:148(__subclasscheck__)
   108215    0.919    0.000    5.038    0.000 common.py:407(is_timedelta64_dtype)
   108216    0.919    0.000   33.760    0.000 core.py:653(__pow__)
   108215    0.905    0.000  160.404    0.001 quantity.py:1332(decompose)
   108215    0.891    0.000    1.154    0.000 decorators.py:747(__get__)
   108215    0.865    0.000    1.144    0.000 constant.py:139(__quantity_subclass__)
   108216    0.861    0.000    1.174    0.000 function_base.py:241(iterable)
   108214    0.847    0.000    1.605    0.000 common.py:546(is_string_dtype)
   216430    0.807    0.000    0.807    0.000 {method 'lower' of 'unicode' objects}
   108216    0.805    0.000   10.434    0.000 quantity_helper.py:106(helper_dimensionless_to_dimensionless)
   108215    0.799    0.000    4.023    0.000 common.py:227(is_datetimetz)
   108214    0.782    0.000    3.814    0.000 common.py:477(is_interval_dtype)
     3000    0.755    0.000 5081.485    1.694 ensemble.py:292(_propose_stretch)
   108213    0.743    0.000    3.531    0.000 {method 'sum' of 'numpy.ndarray' objects}
   216431    0.732    0.000    0.732    0.000 quantity.py:927(isscalar)
   216430    0.728    0.000    0.728    0.000 constant.py:159(name)
   108215    0.726    0.000 3249.323    0.030 core.py:1170(comoving_transverse_distance)
   108215    0.714    0.000    0.714    0.000 {numpy.core.umath.frompyfunc}
   216430    0.677    0.000    0.677    0.000 internals.py:127(_check_ndim)
   108219    0.652    0.000    0.652    0.000 {zip}
   108215    0.648    0.000    1.039    0.000 <string>:8(__new__)
     3001    0.634    0.000 5084.822    1.694 ensemble.py:340(_get_lnprob)
   108213    0.618    0.000    2.788    0.000 _methods.py:34(_sum)
   216430    0.614    0.000    0.614    0.000 constant.py:183(system)
   108214    0.602    0.000    3.114    0.000 common.py:444(is_period_dtype)
   108214    0.588    0.000   66.739    0.001 missing.py:32(isna)
   108217    0.585    0.000    4.449    0.000 quantity_helper.py:353(helper_twoarg_invariant)
   108214    0.548    0.000    0.758    0.000 common.py:1784(_get_dtype)
   216430    0.525    0.000    0.525    0.000 internals.py:233(mgr_locs)
   216430    0.512    0.000    0.512    0.000 numeric.py:110(is_all_dates)
   216430    0.512    0.000    0.512    0.000 core.py:1434(is_unity)
   216434    0.501    0.000    0.501    0.000 quantity_helper.py:325(<genexpr>)
   216430    0.498    0.000    0.498    0.000 series.py:349(_constructor)
     6000    0.483    0.000    0.483    0.000 {method 'rand' of 'mtrand.RandomState' objects}
   108215    0.473    0.000    0.473    0.000 weakref.py:362(__getitem__)
   108215    0.391    0.000    0.391    0.000 parameter.py:193(<genexpr>)
   108215    0.391    0.000    0.391    0.000 {built-in method __new__ of type object at 0x5570594ed9c0}
   108214    0.385    0.000    0.385    0.000 {method 'ravel' of 'numpy.ndarray' objects}
   108214    0.345    0.000    0.345    0.000 minimizer.py:2065(validate_nan_policy)
   108214    0.313    0.000    0.313    0.000 quantity_helper.py:61(<lambda>)
   108215    0.287    0.000    0.287    0.000 {math.floor}
   108215    0.277    0.000    0.277    0.000 {method 'join' of 'str' objects}
   108215    0.244    0.000    0.244    0.000 errors.py:125(errmsg)
     1500    0.217    0.000    0.260    0.000 {method 'get_state' of 'mtrand.RandomState' objects}
     6000    0.078    0.000    0.153    0.000 shape_base.py:63(atleast_2d)
        1    0.071    0.071    0.071    0.071 {numpy.core.multiarray.dot}
     3000    0.060    0.000    0.060    0.000 {method 'randint' of 'mtrand.RandomState' objects}
        1    0.054    0.054    0.054    0.054 {method 'partition' of 'numpy.ndarray' objects}
        1    0.036    0.036 5088.370 5088.370 minimizer.py:937(emcee)
        1    0.021    0.021    0.119    0.119 function_base.py:2330(corrcoef)
        1    0.021    0.021    0.120    0.120 function_base.py:3672(_quantile_ureduce_func)
        1    0.020    0.020    0.099    0.099 function_base.py:2121(cov)
        5    0.020    0.004    0.020    0.004 {sorted}
     6008    0.015    0.000    0.015    0.000 {method 'append' of 'list' objects}
       11    0.014    0.001    0.014    0.001 {numpy.core.multiarray.normalize_axis_index}
     3007    0.014    0.000    0.014    0.000 {range}
     1500    0.010    0.000    0.270    0.000 sampler.py:49(random_state)
        1    0.008    0.008 5087.947 5087.947 sampler.py:135(run_mcmc)
        1    0.005    0.005    0.015    0.015 minimizer.py:593(prepare_fit)
        4    0.005    0.001    0.005    0.001 {numpy.core.multiarray.concatenate}
        1    0.003    0.003    0.005    0.005 astutils.py:338(make_symbol_table)
        1    0.002    0.002    0.002    0.002 {method 'reshape' of 'numpy.ndarray' objects}
        1    0.002    0.002    0.008    0.008 asteval.py:123(__init__)
        2    0.001    0.001    0.001    0.001 {method 'take' of 'numpy.ndarray' objects}
      483    0.001    0.000    0.001    0.000 {callable}
        1    0.001    0.001    0.007    0.007 function_base.py:272(average)
       11    0.000    0.000    0.015    0.001 numeric.py:1468(normalize_axis_tuple)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:115(_broadcast_to)
        5    0.000    0.000    0.021    0.004 numeric.py:1524(moveaxis)
        1    0.000    0.000    0.010    0.010 parameter.py:85(__deepcopy__)
        1    0.000    0.000    0.000    0.000 asteval.py:216(user_defined_symbols)
        2    0.000    0.000    0.000    0.000 numeric.py:2350(within_tol)
        4    0.000    0.000    0.000    0.000 parameter.py:678(setup_bounds)
        1    0.000    0.000    0.000    0.000 sampler.py:37(__init__)
       22    0.000    0.000    0.014    0.001 numeric.py:1515(<genexpr>)
        1    0.000    0.000    0.006    0.006 _methods.py:58(_mean)
       22    0.000    0.000    0.000    0.000 {repr}
        1    0.000    0.000    0.003    0.003 minimizer.py:336(_calculate_statistics)
        2    0.000    0.000    0.001    0.000 numeric.py:2274(isclose)
       16    0.000    0.000    0.000    0.000 inspect.py:51(ismodule)
        1    0.000    0.000 5088.370 5088.370 <string>:2(<module>)
        1    0.000    0.000    0.008    0.008 parameter.py:46(__init__)
        1    0.000    0.000    0.135    0.135 function_base.py:3398(percentile)
        4    0.000    0.000    0.000    0.000 numeric.py:2491(seterr)
        1    0.000    0.000    0.135    0.135 function_base.py:3199(_ureduce)
        4    0.000    0.000    0.016    0.004 numerictypes.py:619(issubclass_)
        2    0.000    0.000    0.016    0.008 numerictypes.py:687(issubdtype)
        2    0.000    0.000    0.001    0.000 parameter.py:624(_init_bounds)
        3    0.000    0.000    0.001    0.000 fromnumeric.py:49(_wrapfunc)
        1    0.000    0.000    0.000    0.000 {method 'randn' of 'mtrand.RandomState' objects}
        1    0.000    0.000 5088.370 5088.370 minimizer.py:1844(minimize)
        1    0.000    0.000    0.010    0.010 copy.py:145(deepcopy)
        2    0.000    0.000    0.000    0.000 parameter.py:120(__setitem__)
        1    0.000    0.000    0.000    0.000 quantity.py:1511(_wrap_function)
        4    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.generic' objects}
        4    0.000    0.000    0.000    0.000 _methods.py:45(_all)
        1    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
        2    0.000    0.000    0.002    0.001 function_base.py:689(copy)
        3    0.000    0.000    0.000    0.000 {numpy.core.multiarray.result_type}
        1    0.000    0.000    0.000    0.000 ensemble.py:80(__init__)
        4    0.000    0.000    0.000    0.000 numeric.py:2592(geterr)
       11    0.000    0.000    0.000    0.000 {operator.index}
        5    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'difference' of 'set' objects}
        1    0.000    0.000    0.000    0.000 ensemble.py:116(reset)
        6    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        2    0.000    0.000    0.001    0.000 parameter.py:501(__init__)
        1    0.000    0.000    0.000    0.000 {method 'conj' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 twodim_base.py:197(diag)
        1    0.000    0.000 5088.370 5088.370 minimizer.py:2144(minimize)
        2    0.000    0.000    0.001    0.001 fromnumeric.py:86(take)
        1    0.000    0.000    0.000    0.000 function_base.py:3659(_quantile_is_valid)
        1    0.000    0.000    0.000    0.000 quantity.py:1099(__pow__)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1294(diagonal)
        1    0.000    0.000    0.000    0.000 minimizer.py:363(__init__)
        1    0.000    0.000    0.000    0.000 ensemble.py:423(chain)
        4    0.000    0.000    0.000    0.000 {abs}
        8    0.000    0.000    0.000    0.000 {numpy.core.umath.geterrobj}
        2    0.000    0.000    0.000    0.000 numeric.py:2887(__init__)
        2    0.000    0.000    0.000    0.000 astutils.py:233(valid_symbol_name)
        2    0.000    0.000    0.000    0.000 parameter.py:810(__set_expression)
        1    0.000    0.000    0.000    0.000 {method 'clip' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 sampler.py:61(random_state)
        1    0.000    0.000    0.000    0.000 copy.py:267(_keep_alive)
        1    0.000    0.000    0.000    0.000 parameter.py:329(add_many)
        6    0.000    0.000    0.000    0.000 parameter.py:794(expr)
        4    0.000    0.000    0.000    0.000 {numpy.core.umath.seterrobj}
        5    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        1    0.000    0.000    0.000    0.000 _methods.py:48(_count_reduce_items)
        2    0.000    0.000    0.000    0.000 numeric.py:2896(__exit__)
        1    0.000    0.000    0.000    0.000 parameter.py:95(<dictcomp>)
        2    0.000    0.000    0.000    0.000 parameter.py:800(expr)
        1    0.000    0.000    0.135    0.135 function_base.py:3647(_quantile_unchecked)
        2    0.000    0.000    0.000    0.000 numeric.py:2891(__enter__)
        1    0.000    0.000    0.000    0.000 type_check.py:250(iscomplexobj)
        1    0.000    0.000    0.006    0.006 {method 'mean' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 stride_tricks.py:138(broadcast_to)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1764(clip)
        1    0.000    0.000    0.000    0.000 quantity.py:1192(__len__)
        1    0.000    0.000    0.000    0.000 minimizer.py:661(<dictcomp>)
        2    0.000    0.000    0.000    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1821(sum)
        4    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 minimizer.py:288(__init__)
        3    0.000    0.000    0.000    0.000 quantity.py:1544(<genexpr>)
        1    0.000    0.000    0.000    0.000 {method 'set_state' of 'mtrand.RandomState' objects}
        1    0.000    0.000    0.000    0.000 quantity.py:1585(sum)
        1    0.000    0.000    0.000    0.000 quantity_helper.py:91(<lambda>)
        1    0.000    0.000    0.000    0.000 {method 'diagonal' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 stride_tricks.py:120(<genexpr>)
        2    0.000    0.000    0.000    0.000 {numpy.core.multiarray.empty}
        1    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 stride_tricks.py:25(_maybe_view_as_subclass)
        2    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
        1    0.000    0.000    0.000    0.000 ensemble.py:442(lnprobability)
        1    0.000    0.000    0.000    0.000 ensemble.py:512(__init__)
        3    0.000    0.000    0.000    0.000 {id}
        1    0.000    0.000    0.000    0.000 {time.time}
        1    0.000    0.000    0.000    0.000 minimizer.py:2043(_make_random_gen)
        1    0.000    0.000    0.000    0.000 sampler.py:118(reset)
        1    0.000    0.000    0.000    0.000 ensemble.py:109(clear_blobs)
        1    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        1    0.000    0.000    0.000    0.000 sampler.py:97(lnprobability)
        1    0.000    0.000    0.000    0.000 sampler.py:81(chain)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}